---
title: "Homework 03"
author: "Sarah Tate"
format:
  html: 
    toc: true # includes a table of contents in rendered html format
execute: # for all code chunks
    warning: false # do not display warnings
    message: false # do not display messages
---

```{r}
# general use
library(tidyverse)
library(readxl)
library(here)
library(janitor)

# visualizing pairs
library(GGally)

# model selection
library(MuMIn)

# model predictions
library(ggeffects)

# model tables
library(gtsummary)
library(flextable)
library(modelsummary)

drought_exp <- read_xlsx(path = here("data", 
                                     "Valliere_etal_EcoApps_Data.xlsx"),
                         sheet = "First Harvest")

```


```{r}
# cleaning
drought_exp_clean <- drought_exp %>% 
  clean_names() %>% # nicer column names
  mutate(species_name = case_when( # adding column with species scientific names
    species == "ENCCAL" ~ "Encelia californica", # bush sunflower
    species == "ESCCAL" ~ "Eschscholzia californica", # California poppy
    species == "PENCEN" ~ "Penstemon centranthifolius", # Scarlet bugler
    species == "GRICAM" ~ "Grindelia camporum", # great valley gumweed
    species == "SALLEU" ~ "Salvia leucophylla", # Purple sage
    species == "STIPUL" ~ "Nasella pulchra", # Purple needlegrass
    species == "LOTSCO" ~ "Acmispon glaber" # deerweed
  )) %>% 
  relocate(species_name, .after = species) %>% # moving species_name column after species
  mutate(water_treatment = case_when( # adding column with full treatment names
    water == "WW" ~ "Well watered",
    water == "DS" ~ "Drought stressed"
  )) %>% 
  relocate(water_treatment, .after = water) # moving water_treatment column after water
```

#correlations
```{r}
ggpairs(drought_exp_clean, # data frame
        columns = c("leaf_dry_weight_g", # columns to visualize
                    "sla", 
                    "shoot_g", 
                    "root_g", 
                    "total_g"), 
        upper = list(method = "pearson")) + # calculating Pearson correlation coefficient
  theme_bw() + # cleaner theme
  theme(panel.grid = element_blank()) # getting rid of gridlines
```


```{r}
# null model
model0 <- lm(total_g ~ 1, # formula
             data = drought_exp_clean) # data frame

# saturated model
model1 <- lm(total_g ~ sla + water_treatment + species_name,
             data = drought_exp_clean)

# model 2: total mass as predicted by specific leaf area and water treatment
model2 <- lm(total_g ~ sla + water_treatment,
             data = drought_exp_clean)

# model 3: total mass as predicted by specific leaf area and species name
model3 <- lm(total_g ~ sla + species_name,
             data = drought_exp_clean)

# model 4: total mass as predicted by species name and water treatments
model4 <- lm(total_g ~ water_treatment + species_name,
             data = drought_exp_clean)

#diagnostics for model 4
par(mfrow = c(2, 2))
plot(model4)
```

```{r}
model.sel(model0,
          model1, 
          model2, 
          model3,
          model4)
```
MODEL 4 IS BEST


```{r}

summary(model4)

```




Problem 1: Multiple linear regression - model selection and construction

a) 



b)

c) MODEL 4 IS BEST BASED ON TEST, CHECK DIAGNOSTICS

```{r}

model_preds <- ggpredict(model4, 
                         terms = c("water_treatment", 
                                   "species_name"))

model_preds_for_plotting <- model_preds %>% 
  rename(water_treatment = x, # renaming columns to make this easier to use
         species_name = group)


ggplot() +
  # underlying data
 geom_point(data = drought_exp_clean,
             alpha = 0.1,
             aes(x = water_treatment,
                 y = total_g,
                color = water_treatment)) +
  # model prediction 95% CI ribbon
  geom_point(data = model_preds_for_plotting,
              aes(x = water_treatment, 
                  y = predicted,
                  color = water_treatment),
              alpha = 1) +
  # model prediction lines
  geom_errorbar(data = model_preds_for_plotting,
            aes(x = water_treatment, 
                y = predicted,
                ymin = conf.low, 
                ymax = conf.high,
                fill = water_treatment),
            width = 0.1,
            alpha = 0.5) +
  # cleaner theme
  theme_classic() +
  # creating different panels for species
  facet_wrap(~species_name)+ 
  theme(legend.position = "none")+
  labs(x = "Water Treatment",
       y = "Total Biomass (g)",
       title = "Figure 1: Total Biomass (g) Predicted By Plant Species And Water Treatment") +
  scale_color_manual(values = c("Well watered" = "steelblue4",
                                "Drought stressed" = "gold4"))

```


d)

e)


Problem 2: Affective visualization


a)

b)

c)

d)


Problem 3: Statistical critique


a)

b)

c)

d)





